package com.active.services.cart.domain.rule

import com.active.services.product.Fee;
import com.active.services.product.FeeType;

global org.slf4j.Logger LOG;

rule "Time based / single price"
    when
        $fact: ProductFact(feeType == FeeType.TIME_BASED || feeType == FeeType.SINGLE, $fees: fees)
        $fee: Fee((startDate == null || startDate <= $fact.pricingDt)
            && (endDate == null || $fact.pricingDt < endDate)) from $fees
    then
        $fact.setResult($fee);
        LOG.debug("Time based / single price rule executed");
end

rule "Volume based price"
    when
        $fact: ProductFact(feeType == FeeType.VOLUME_BASED, $fees: fees)
        $fee: Fee((minVolume == null || minVolume <= $fact.volume)
            && (maxVolume == null || $fact.volume <= maxVolume)) from $fees
    then
        $fact.setResult($fee);
        LOG.debug("Volume based price rule executed");
end
