<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.active.services.cart.repository.mapper.CartMapper">

    <insert id="createCart" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO [dbo].[carts]
        (identifier,
        owner_id,
        keyer_id,
        currency_code,
        created_by,
        created_dt,
        modified_by,
        modified_dt,
        version,
        price_version,
        is_lock,
        cart_status)
        VALUES
        (#{identifier},
        #{ownerId},
        #{keyerId},
        #{currencyCode},
        #{createdBy},
        getdate(),
        #{modifiedBy},
        getdate(),
        #{version},
        #{priceVersion},
        #{lock},
        #{cartStatus}
        )
    </insert>

    <insert id="createCartItem" useGeneratedKeys="true" keyProperty="item.id">
        INSERT INTO [dbo].[cart_item] (
            [cart_id],
            [parent_id],
            [identifier],
            [product_id],
            [product_name],
            [product_description],
            [booking_start_dt],
            [booking_end_dt],
            [trimmed_booking_start_dt],
            [trimmed_booking_end_dt],
            [quantity],
            [unit_price],
            [grouping_identifier],
            [created_by],
            [created_dt],
            [modified_by],
            [modified_dt]
        )
        VALUES (
             #{cartId},
             #{item.parentId},
             #{item.identifier},
             #{item.productId},
             #{item.productName},
             #{item.productDescription},
            <choose>
                <when test="item.bookingRange != null">
                    #{item.bookingRange.lower},
                    #{item.bookingRange.upper},
                </when>
                <otherwise>
                    null,
                    null,
                </otherwise>
            </choose>
            <choose>
                <when test="item.trimmedBookingRange != null">
                    #{item.trimmedBookingRange.lower},
                    #{item.trimmedBookingRange.upper},
                </when>
                <otherwise>
                    null,
                    null,
                </otherwise>
            </choose>
             #{item.quantity},
             #{item.unitPrice},
             #{item.groupingIdentifier},
             #{item.createdBy},
             #{item.createdDt},
             #{item.modifiedBy},
             #{item.modifiedDt}
        )
    </insert>

    <update id="updateCartItem">
        UPDATE [dbo].[cart_item]
        SET
        <if test="item.productName!=null and item.productName!=''">
            [product_name] = #{item.productName},
        </if>
        <choose>
            <when test="item.productDescription!=null">
                [product_description] = #{item.productDescription},
            </when>
            <otherwise>
                [product_description] = null,
            </otherwise>
        </choose>
        <choose>
            <when test="item.bookingRange != null">
                [booking_start_dt] = #{item.bookingRange.lower},
                [booking_end_dt] = #{item.bookingRange.upper},
            </when>
            <otherwise>
                [booking_start_dt] = null,
                [booking_end_dt] = null,
            </otherwise>
        </choose>
        <choose>
            <when test="item.trimmedBookingRange != null">
                [trimmed_booking_start_dt] = #{item.trimmedBookingRange.lower},
                [trimmed_booking_end_dt] = #{item.trimmedBookingRange.upper},
            </when>
            <otherwise>
                [trimmed_booking_start_dt] = null,
                [trimmed_booking_end_dt] = null,
            </otherwise>
        </choose>
        <if test="item.quantity!=null">
            [quantity] = #{item.quantity},
        </if>
        <choose>
            <when test="item.unitPrice!=null">
                [unit_price] = #{item.unitPrice},
            </when>
            <otherwise>
                [unit_price] = null,
            </otherwise>
        </choose>
        <choose>
            <when test="item.groupingIdentifier!=null">
                [grouping_identifier] = #{item.groupingIdentifier},
            </when>
            <otherwise>
                [grouping_identifier] = null,
            </otherwise>
        </choose>
        [modified_by] = #{item.modifiedBy},
        [modified_dt] = #{item.modifiedDt}
        WHERE identifier = #{item.identifier}
    </update>

    <resultMap id="CartResultMap" type="Cart">
        <id property="id" column="id"/>
        <collection property="items" ofType="CartItem" notNullColumn="id" columnPrefix="item_">
            <id property="id" column="id"/>
            <association property="bookingRange" javaType="com.active.services.cart.model.Range">
                <result property="lower" column="booking_start_dt"
                        typeHandler="org.apache.ibatis.type.InstantTypeHandler"/>
                <result property="upper" column="booking_end_dt"
                        typeHandler="org.apache.ibatis.type.InstantTypeHandler"/>
            </association>
            <association property="trimmedBookingRange" javaType="com.active.services.cart.model.Range">
                <result property="lower" column="trimmed_booking_start_dt"
                        typeHandler="org.apache.ibatis.type.InstantTypeHandler"/>
                <result property="upper" column="trimmed_booking_end_dt"
                        typeHandler="org.apache.ibatis.type.InstantTypeHandler"/>
            </association>
        </collection>
    </resultMap>
    <select id="getCart" resultMap="CartResultMap">
        SELECT cart.id                       as id,
               cart.identifier               as identifier,
               cart.owner_id                 as owner_id,
               cart.keyer_id                 as keyer_id,
               cart.currency_code            as currency_code,
               cart.created_by               as created_by,
               cart.created_dt               as created_dt,
               cart.modified_by              as modified_by,
               cart.modified_dt              as modified_dt,
               item.id                       AS item_id,
               item.parent_id                AS item_parent_id,
               item.identifier               AS item_identifier,
               item.product_id               AS item_product_id,
               item.product_name             AS item_product_name,
               item.product_description      AS item_product_description,
               item.booking_start_dt         As item_booking_start_dt,
               item.booking_end_dt           AS item_booking_end_dt,
               item.trimmed_booking_start_dt AS item_trimmed_booking_start_dt,
               item.trimmed_booking_end_dt   AS item_trimmed_booking_end_dt,
               item.quantity                 AS item_quantity,
               item.unit_price               AS item_unit_price,
               item.grouping_identifier      AS item_grouping_identifier,
               item.created_by               AS item_createdBy,
               item.created_dt               AS item_createdDt,
               item.modified_by              AS item_modifiedBy,
               item.modified_dt              AS item_modifiedDt
        FROM dbo.carts cart
                 LEFT JOIN dbo.cart_item item ON cart.id = item.cart_id
        WHERE cart.identifier = #{cartId} and cart.cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </select>

    <delete id="deleteCart">
        DELETE FROM carts WHERE id = #{cartId} and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </delete>

    <delete id="deleteCartItem">
        DELETE
        FROM cart_item
        WHERE id = #{cartItemId}
    </delete>

    <delete id="deleteCartItemByCartId">
        DELETE FROM cart_item WHERE cart_id = #{cartId}
    </delete>
    <delete id="batchDeleteCartItems" parameterType="java.util.List">
        DELETE FROM cart_item WHERE identifier in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <select id="search" resultType="java.util.UUID">
        SELECT identifier FROM carts WHERE owner_id = #{ownerId} and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </select>
    <select id="getCartItemIdByCartItemUuid" resultType="Long">
        SELECT id
        FROM cart_item
        WHERE identifier = #{cartItemId}
    </select>

    <update id="finalizeCart">
        UPDATE [dbo].[carts]
        SET
        cart_status = '${@com.active.services.cart.service.CartStatus@FINALIZED}',
        [modified_dt] = getdate(),
        [modified_by] = #{modifiedBy}
        WHERE identifier = #{identifier} and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </update>

    <update id="acquireLock">
        UPDATE [dbo].[carts]
        SET
        [is_lock] = 1,
        [modified_dt] = getdate(),
        [modified_by] = #{modifiedBy}
        WHERE identifier = #{identifier} and is_lock != 1 and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </update>

    <update id="releaseLock">
        UPDATE [dbo].[carts]
        SET
        [is_lock] = 0,
        [modified_dt] = getdate(),
        [modified_by] = #{modifiedBy}
        WHERE identifier = #{identifier} and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </update>

    <update id="incrementVersion">
        UPDATE [dbo].[carts]
        SET
        version = version+1,
        [modified_dt] = getdate(),
        [modified_by] = #{modifiedBy}
        WHERE identifier = #{identifier} and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </update>

    <update id="incrementPriceVersion">
        UPDATE [dbo].[carts]
        SET
        price_version = version,
        [modified_dt] = getdate(),
        [modified_by] = #{modifiedBy}
        WHERE identifier = #{identifier} and cart_status != '${@com.active.services.cart.service.CartStatus@FINALIZED}'
    </update>
</mapper>
